<!DOCTYPE html>
<html lang="en">
<head>
    <title>Toggle Widget</title>
</head>
<body id="body">
    <style>
        @font-face {
            font-family: 'Open Sans';
            font-style: normal;
            font-weight: 400;
            src: local('Open Sans'), local('OpenSans'), url('../fonts/OpenSans400.woff') format('woff');
        }

        @font-face {
            font-family: 'Open Sans';
            font-style: normal;
            font-weight: 700;
            src: local('Open Sans'), local('OpenSans'), url('../fonts/OpenSans700.woff') format('woff');
        }

        body {
            font-family: 'Open Sans', sans-serif;
            font-size: 14px;
            overflow: hidden;
        }

        .noSelect {
            -webkit-touch-callout: none;
            -webkit-user-select: none;
            -khtml-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }

        .btn {
            text-align: center;
            border-radius: 3px;
        }
            .btn:hover {
                cursor: pointer;
            }

        .btnTB {
            text-align: center;
            border-radius: 3px;
        }

        .yellow {
            border: 2px solid #fbeed5;
            background-color: #fcf8e3;
            color: #c09853;
        }
            .yellow:hover {
                border: 2px solid #f3e6cd;
                background-color: #f4f0dd;
                color: #a8904d;
            }

        .white {
            border: 2px solid #e3e3e3;
            background-color: #ffffff;
            color: #999;
        }
            .white:hover {
                border: 2px solid #dbdbdb;
                background-color: #f5f5f5;
                color: #878787;
            }

        .grey {
            border: 2px solid #e3e3e3;
            background-color: #f5f5f5;
            color: #999;
        }
            .grey:hover {
                border: 2px solid #d0d0d0;
                background-color: #e5e5e5;
                color: #888;
            }

        .blue {
            border: 2px solid #bce8f1;
            background-color: #d1e5ef;
            color: #3a87ad;
        }
            .blue:hover {
                border: 2px solid #b4e0ea;
                background-color: #d9edf7;
                color: #327fa5;
            }

        .red {
            border: 4px solid #b94a48;
            color: #b94a48;
        }
            .red:hover {
                border: 5px solid #b94a48;
                color: #b94a48;
            }

        .green {
            border: 2px solid #b6c9a6;
            background-color: #dff0d8;
            color: #468847;
        }
            .green:hover {
                border: 2px solid #cee2be;
                background-color: #cfe0c8;
                color: #3e803f;
            }

    </style>

    <span id="TBtooltip" data-default="ON/OFF Toggle channel"  />
    <span id="attrib0" data-type="channel" data-name="Channel" data-default="" />
    <span id="attrib1" data-type="dropdown" data-name="grey, green, red, yellow, blue, white" data-default="red" />
    <span id="attrib2" data-type="input" data-name="Trigger Scope" data-default="ACTION" />
    <span id="attrib3" data-type="input" data-name="Trigger Value" data-default="1" />
    <span id="attrib4" data-type="input" data-name="Tooltip" data-default="ON/OFF Toggle" />
    <span id="ontop" data-default="false" />

    <div id="group">
        <div id="widget" style="width: 100px; height: 245px; position: absolute; left: 0px; top: 0px; z-index: 0">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g><path d="M18,12 A6,6,0,0,0,12,18 A6,6,0,1,1,18,12" fill="none" stroke="black" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><animateTransform attributeName="transform" attributeType="xml" type="rotate" dur="15s" calcMode="spline" values="-67.5 12 12;-22.5 12 12;-67.5 12 12" keyTimes="0;0.5;1" keySplines="0.5 0 0.5 1;0.5 0 0.5 1" repeatCount="indefinite" /></path><animateTransform attributeName="transform" attributeType="xml" type="translate" dur="15s" calcMode="spline" values="2 0;-2 0;2 0" keyTimes="0;0.5;1" keySplines="0.5 0 0.5 1;0.5 0 0.5 1" repeatCount="indefinite" /></g></svg>
            <!--<div id="slider" style="width: 30px; height: 21px; position: absolute; left: 4px; top: 4px; background-color: #b94a48; opacity:0.6; z-index: 0"></div>-->
            <iframe id="xx" frameborder="0" height="100" width="100%" src="http://forecast.io/embed/#lat=-27.547923&lon=153.014832&name=Brisbane" style="display: none; width: 100px; height: 245px; position: absolute; left: 0px; top: 0px; z-index: 0"/>
        </div>
    </div>

    <script src="../widgetFramework.js" type="text/javascript"></script>
    <script>

        function toolboxStart() {           // called when loaded in toolbox
            _widgetID.style.setProperty("width", parseInt(_widgetID.style.getPropertyValue("width")) + "px");              // fill toolbox width (no 3D border needed)
            _widgetID.style.setProperty("height", parseInt(_widgetID.style.getPropertyValue("width")) + "px");
        }

        function startEdit() {              // called when editing started
            document.body.setAttribute("spellcheck", "true");
        }

        function endEdit(param0) {                // called when editing finishes
            document.body.setAttribute("spellcheck", "false");
            fwFunc("setAttrib", 5, _widgetID.textContent)               // Save any edited text
            widgetStart()
        }

        function startDesign() {            // called when switching to design mode
            _widgetID.contentEditable = "true"
            _widgetID.className = _widgetID.className.replace(" noSelect", "")
        }

        function endDesign() {            // called when switching to design mode
            _widgetID.contentEditable = "false"
        }

        function scale(scaleX, scaleY) {    // manage scaling
            //_widgetID.style.setProperty("width", (_iniWidth * scaleX - 10) + "px");             // Allow space for shadow
            //_widgetID.style.setProperty("height", (_iniHeight * scaleY - 10) + "px");
            _widgetID.style.setProperty("line-height", _iniHeight * scaleY - 10 + "px");
        }

        function clicked(event) {                   // left Button pressed
            if (event.which === 1) channelSend(_attribs[0].value, _attribs[3].value, _attribs[4].value);
        }

        //// Widget specific functions
        function widgetStart(mode) {            // widget specific startup
            //_widgetID.textContent = _attribs[5].value;
            if (_attribs[4].value !== "") fwFunc("setTooltip", _attribs[4].value);
            return true;
        }

        function feed(channel, scope, data) {            // feed from the server
        }

    </script>
</body>
</html>